# Release notes

#set($h2 = '##')
#set($h3 = '###')
#set($h4 = '####')
#set($gborgbug = 'http://web.archive.org/web/20061208113236/http://gborg.postgresql.org/project/pljava/bugs/bugupdate.php?')
#set($pgfbug = 'http://pgfoundry.org/tracker/?func=detail&amp;atid=334&amp;group_id=1000038&amp;aid=')
#set($pgffeat = 'http://pgfoundry.org/tracker/?func=detail&amp;atid=337&amp;group_id=1000038&amp;aid=')

$h2 PL/Java 1.5.0

$h2 Earlier releases

$h3 PL/Java 1.4.3 (15 September 2011)

Notable changes in this release:

* Works with PostgreSQL 9.1
* Correctly links against IBM Java.
* Reads microseconds correctly in timestamps.

Bugs fixed:

* [Be clear about not building with JDK 1.6][1010660]
* [Does not link with IBM VM][1010970]
* [SPIConnection.getMetaData() is incorrectly documented][1010971]
* [PL/Java 1.4.2 Does not build with x86_64-w64-mingw32][1011025]
* [PL/Java does not build with PostgreSQL 9.1][1011091]

Feature Requests:

* [Allow pg_config to be set externally to the Makefile][1011092]
* [Add option to have pljava.so built with the runtime path of libjvm.so][1010955]

[1010660]: ${pgfbug}1010660
[1010970]: ${pgfbug}1010970
[1010971]: ${pgfbug}1010971
[1011025]: ${pgfbug}1011025
[1011091]: ${pgfbug}1011091

[1011092]: ${pgffeat}1011092
[1010955]: ${pgffeat}1010955

$h3 PL/Java 1.4.2 (11 December 2010)

Bugfixes:

* [Function returning complex objects with POD arrays cause a segfault][1010956]
* [Segfault when assigning an array to ResultSet column][1010953]
* [Embedded array support in returned complex objects][1010482]

[1010956]: ${pgfbug}1010956
[1010953]: ${pgfbug}1010953
[1010482]: ${pgfbug}1010482

$h3 PL/Java 1.4.1 (9 December 2010)

Note: Does not compile with Java 6.  Use JDK 1.5 or 1.4.

Compiles with PostgreSQL 8.4 and 9.0.

Connection.getCatalog() has been implemented.

Bugfixes:

* [Compiling error with postgresql 8.4.1][1010759]
* [org.postgresql.pljava.internal.Portal leak][1010712]
* [build java code with debugging if server has debugging enabled][1010189]
* [Connection.getCatalog() returns null][1010653]
* [VM crash in TransactionListener][1010462]
* [Link against wrong library when compiling amd64 code on Solaris][1010954]

[1010759]: ${pgfbug}1010759
[1010712]: ${pgfbug}1010712
[1010189]: ${pgfbug}1010189
[1010653]: ${pgfbug}1010653
[1010462]: ${pgfbug}1010462
[1010954]: ${pgfbug}1010954

Other commits:

For a multi-threaded pljava function we need to adjust stack_base_ptr
before calling into the backend to avoid stack depth limit exceeded
errors.  Previously this was done only on query execution, but we need
to do it on iteration of the ResultSet as well.

When creating a variable length data type, the code was directly
assigning the varlena header length rather than going through an
access macro.  The header format changed for the 8.3 release and this
manual coding was not noticed and changed accordingly.  Use
SET_VARSIZE to do this correctly.

Handle passed by value data types by reading and writing directly to
the Datum rather than dereferencing it.

If the call to a type output function is the first pljava call in a
session, we get a crash.  The first pljava call results in a SPI
connection being established and torn down.  The type output function
was allocating the result in the SPI memory context which gets
destroyed prior to returning the data to the caller.  Allocate the
result in the correct context to survive function exit.

Clean up a warning about byteasend and bytearecv not having a
prototype when building against 9.0 as those declarations are now in a
new header file.


$h3 PL/Java 1.4.0 (1 February 2008)

Warning! The recent postgresql security releases changed the API of a function
that PL/Java uses. The source can be built against either version, but the
binaries will only run against the version they were built against. The PL/Java
binaries for 1.4.0 have all been built against the latest server releases (which
you should be using anyway). If you are using an older you will have to build
from source. The binary releases support: 8.3 - All versions. 8.2 - 8.2.6 and
up. 8.1 - 8.1.11 and up. 8.0 - 8.0.15 and up.

$h3 PL/Java 1.3.0 (18 June 2006)

This release is about type mapping and the creation of new types in PL/Java. An
extensive effort has gone into making the PL/Java type system extremely
flexible. Not only can you map arbitrary SQL data types to java classes. You can
also create new scalar types completely in Java. Read about the Changes in
version 1.3.

$h4 Changes

* A much improved type mapping system that will allow you to:

    * [Map any SQL type to a Java class][maptype]
    * [Create a Scalar UDT in Java][scalarudt]
    * [Map array and pseudo types][deftypemap]

[maptype]: https://github.com/tada/pljava/wiki/Mapping-an-sql-type-to-a-java-class
[scalarudt]: https://github.com/tada/pljava/wiki/Creating-a-scalar-udt-in-java
[deftypemap]: https://github.com/tada/pljava/wiki/Default-type-mapping

* Get the OID for a given relation ([feature request 1319][1319])
* Jar manifest included in the SQLJ Jar repository
    ([feature request 1525][1525])

$h4 Fixed bugs

* [Reconnect needed for jar manipulation to take effect][1531]
* [Backends hang with test suite][1504]
* [Keeps crashing while making a call to a function][1560]
* [Memory Leak in Statement.executeUpdate][1556]
* [jarowner incorrect after dump and reload][1506]
* [Missing JAR manifest][1525]
* [TZ adjustments for Date are incorrect][1547]
* [Functions returning sets leaks memory][1542]
* [drop lib prefix][1423]
* ["oid" column is not available in trigger's NEW/OLD ResultSet][1317]
* [fails to run with GCJ, too][1480]
* [Compile failure with 8.1.4][1558]
* [fails to build with GCJ][1479]
* [Record returning function cannot be called with different structures within one session][1440]
* [Cannot map function with complex return type to method that uses non primitive arguments][1551]
* [Get OID for given relation][1319]

[1531]: ${gborgbug}1531
[1504]: ${gborgbug}1504
[1560]: ${gborgbug}1560
[1556]: ${gborgbug}1556
[1506]: ${gborgbug}1506
[1525]: ${gborgbug}1525
[1547]: ${gborgbug}1547
[1542]: ${gborgbug}1542
[1423]: ${gborgbug}1423
[1317]: ${gborgbug}1317
[1480]: ${gborgbug}1480
[1558]: ${gborgbug}1558
[1479]: ${gborgbug}1479
[1440]: ${gborgbug}1440
[1551]: ${gborgbug}1551
[1319]: ${gborgbug}1319

$h3 PL/Java 1.2.0 (20 Nov 2005)

The PL/Java 1.2.0 release is primarily targeted at the new PostgreSQL 8.1 but
full support for 8.0.x is maintained. New features include support IN/OUT
parameters, improved meta-data handling, and better memory management.

$h3 PL/Java 1.1.0 (14 Apr 2005)

PL/Java 1.1.0 includes a lot of new features such as `DatabaseMetaData`,
`ResultSetMetaData`, language handlers for both trusted and untrusted language,
additional semantics for functions returning `SETOF`, and simple ObjectPooling.

$h3 PL/Java 1.0.1 (07 Feb 2005)

This release resolves a couple of important security issues. The most important
one is perhaps that PL/Java now is a trusted language. See [Security][] for more
info. Filip Hrbek, now member of the PL/Java project, contributed what was
needed to make this happen.

[Security]: https://github.com/tada/pljava/wiki/Security

$h3 PL/Java 1.0.0 (23 Jan 2005)

Today, after a long period of fine tuning, PL/Java 1.0.0 was finally released.
